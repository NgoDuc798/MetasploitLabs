#
# Labtainer Dockerfile
#
#  This is the default Labtainer Dockerfile template, plesae choose the appropriate
#  base image below.
#
# The labtainer.base image includes the following packages:
#    build-essential  expect  file  gcc-multilib  gdb  iputils-ping  less  man  manpages-dev 
#    net-tools  openssh-client  python  sudo  tcl8.6  vim  zip  hexedit  rsyslog
#
# The labtainer.network image adds the following packages:
#   openssl openssh-server openvpn wget tcpdump  update-inetd  xinetd
#
ARG registry
FROM $registry/labtainer.mysql
#FROM $registry/labtainer.network
#FROM $registry/labtainer.centos
#FROM $registry/labtainer.lamp
#
#  lab is the fully qualified image name, e.g., mylab.some_container.student
#  labdir is the name of the lab, e.g., mylab 
#  imagedir is the name of the container
#  user_name is the USER from the start.config, if other than ubuntu,
#            then that user must be added in this dockerfile
#            before the USER command
#
ARG lab
ARG labdir
ARG imagedir
ARG user_name
ARG password
ARG apt_source
ARG version
LABEL version=$version
ENV APT_SOURCE $apt_source
RUN /usr/bin/apt-source.sh
#
#  put package installation here
#
#
# Install the system files found in the _system directory
#
ADD $labdir/$imagedir/sys_tar/sys.tar /
ADD $labdir/sys_$lab.tar.gz /
#
RUN useradd -ms /bin/bash $user_name
RUN echo "$user_name:$password" | chpasswd
RUN adduser $user_name sudo
# replace above with below for centos/fedora
#RUN usermod $user_name -a -G wheel


#
#  **** Perform all root operations, e.g.,           ****
#  **** "apt-get install" prior to the USER command. ****
RUN apt-get update && apt-get install -y --no-install-recommends mysql-workbench xdg-utils libcanberra-gtk3-module firefox sqlite3 && rm -rf /var/cache/apt/
RUN chmod -x /usr/sbin/policy-rc.d && \
    mv /usr/sbin/policy-rc.d /usr/sbin/policy-rc.d.backup && \
    apt-get install -y --no-install-recommends apache2 php php-xml php-mbstring wget curl && \
    apt install -y php7.0-mysqli && \
    service apache2 restart && \
    service php7.0-fpm restart && \
    apt-get install php7.0 libapache2-mod-php7.0 -y && \
    a2enmod php7.0  
RUN service mysql start && \
    mysql -u root -e "CREATE USER IF NOT EXISTS 'admin'@'localhost' IDENTIFIED BY 'admin';" && \
    mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' WITH GRANT OPTION;" && \
    mysql -u admin -padmin -e "ALTER USER 'admin'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password'; FLUSH PRIVILEGES;"

RUN apt install -y php php-xml php-mbstring && \
    apt install -y mysql-server php libapache2-mod-php php-mysqli php-gd php-mbstring php-fileinfo php-curl unzip && \
    wget https://releases.hashicorp.com/consul/1.4.4/consul_1.4.4_linux_amd64.zip && \
    unzip consul_1.4.4_linux_amd64.zip && \
    mv consul /usr/local/bin/ && \
    chmod +x /usr/local/bin/consul 
RUN printf "[Unit]\nDescription=Consul Agent\nDocumentation=https://www.consul.io/docs\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/consul agent -dev -client=0.0.0.0 -enable-script-checks\nExecReload=/bin/kill -HUP \$MAINPID\nKillMode=process\nRestart=on-failure\nUser=root\nGroup=root\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\n" > /etc/systemd/system/consul.service
RUN systemctl enable consul.service
 
    
   
#
USER $user_name
ENV HOME /home/$user_name
#
# Install files in the user home directory
#
ADD $labdir/$imagedir/home_tar/home.tar $HOME
# remove after docker fixes problem with empty tars
RUN rm -f $HOME/home.tar
ADD $labdir/$lab.tar.gz $HOME
#

#
USER root
RUN python /home/admin/create_flag.py


